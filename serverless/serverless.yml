service: graphqlConf

provider:
  name: aws
  region: ap-southeast-2
  runtime: nodejs8.10

plugins:
  - serverless-appsync-plugin
  - serverless-appsync-offline
  - serverless-offline

functions:
  graphql:
    handler: functions/handler.graphqlHandler

resources:
  Resources:
    AppSyncServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "Lambda-AppSyncServiceRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "Lambda-AppSyncServiceRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "lambda:invokeFunction"
                  Resource:
                    - "arn:aws:lambda:{your-region}:*:function:{your-deployed-graphql-function-above}"
                    - "arn:aws:lambda:{your-region}:*:function:{your-deployed-graphql-function-above}:*"

custom:
  config: ${file(.secrets.yml)}
  appSync:
    name: GraphqlConf-Boilerplate
    apiId: ${self:custom.config.APPSYNC_API_ID} # only required for update-appsync
    # authenticationType: AWS_IAM # API_KEY is also supported
    # userPoolConfig:
    #   awsRegion: ${self:custom.config.APPSYNC_USER_POOL_ID} # required # region
    #   defaultAction: ALLOW
    #   userPoolId: ${self:custom.config.APPSYNC_USER_POOL_ID} # replace this with your Cognito User Pool Id
    mappingTemplates:
      - dataSource: Lambda
        type: Mutation
        field: createUser
        request: "mutation-request.txt"
        response: "mutation-response.txt"
      - dataSource: Lambda
        type: Mutation
        field: updateUser
        request: "mutation-request.txt"
        response: "mutation-response.txt"
      - dataSource: Lambda
        type: Query
        field: getUser
        request: "query-request.txt"
        response: "query-response.txt"
    
    # schema: # defaults schema.graphql
    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AWS_LAMBDA
        name: Lambda
        description: "Lambda DataSource"
        config:
          lambdaFunctionArn: "arn:aws:lambda:ap-southeast-2:${self:custom.config.APPSYNC_API_ID}:function:MBRC-AppSync-mbrc-graphql"
          serviceRoleArn: "arn:aws:iam::${self:custom.config.APPSYNC_API_ID}:role/Lambda-${self:custom.appSync.serviceRole}"
          functionName: graphql
  appsync-offline:
    port: 60004